[tool.poetry]
name = "concrete-ml"
version = "1.2.0-rc0"
description = "Concrete ML is an open-source set of tools which aims to simplify the use of fully homomorphic encryption (FHE) for data scientists."
license = "BSD-3-Clause-Clear"
authors = [
    "Zama <hello@zama.ai>",
]
homepage = "https://zama.ai/concrete-ml/"
repository = "https://github.com/zama-ai/concrete-ml"
documentation = "http://docs.zama.ai/concrete-ml/"
keywords = ["FHE", "homomorphic encryption", "privacy", "security"]
packages = [
    { include = "concrete", from = "src" },
]
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering",
    "Topic :: Security",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Compilers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
readme = "README.md"

[tool.poetry.urls]
"README" = "https://github.com/zama-ai/concrete-ml/blob/main/README.md"
"Bug Tracker" = "https://github.com/zama-ai/concrete-ml/issues"

[tool.poetry.dependencies]
# Investigate if it is better to fix specific versions or use lower and upper bounds  
# FIXME: https://github.com/zama-ai/concrete-ml-internal/issues/2665
python = ">=3.8.1,<3.11"
# FIXME: https://github.com/zama-ai/concrete-ml-internal/issues/3379
concrete-python = "2.2.0"
setuptools = "65.6.3"
skops = {version = "0.5.0"}
xgboost = "1.6.2"
skorch = "0.11.0"
torch = "1.13.1"
typing-extensions = "4.5.0"
brevitas = "0.8.0"
onnxoptimizer = "0.3.10"
onnxruntime = "1.13.1"
hummingbird-ml = {version="0.4.8", extras = ["onnx"]}
scikit-learn = "1.1.3"
onnx = "1.13.1"
scipy = "1.10.1"
numpy = "1.23.5"
protobuf = "3.20.3"

# Deployment
boto3 = "^1.23.5"
fastapi = "^0.102.0"
uvicorn = "^0.21.0"
tqdm = "^4.64.1"
transformers = "^4.30.2"
certifi = "2023.07.22"
pytest-json-report = "1.5.0"
gitpython = "3.1.35"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
black = "^22.1.0"
pylint = "^2.13.0"
# Coverage issue 
# FIXME: https://github.com/zama-ai/concrete-ml-internal/issues/2541
pytest = "7.4.1"
pytest-cov = "^4.1.0"
pytest_codeblocks = "^0.14.0"
mypy = "^0.991"
pydocstyle = "^6.1.1"
python-semantic-release = "^7.27.0"
semver = "^2.13.0"
tomlkit = "^0.7.0"
pytest-xdist = "^2.5.0"
pytest-randomly = "^3.11.0"
nbmake = "^1.3.0"
pygments-style-tomorrow = "^1.0.0"
pytest-repeat = "^0.9.1"
mdformat = "^0.7.14"
mdformat_myst = "^0.1.4"
mdformat-toc = "^0.3.0"
pip-audit = "^2.1.0"
jupyter = "^1.0.0"
py-progress-tracker = "0.6.0"
nbqa = "^1.3.1"
darglint = "^1.8.1"
linkcheckmd = "^1.4.0"
keyring = "*"
# pandas is required for some of our notebooks but not by our source code
pandas = "^1.3.0"
jinja2 = "^3.1.2"
LinkChecker = "^10.1.0"
kaggle = "^1.5.12"
tf2onnx = "^1.10.1"
boto3 = "^1.23.5"
requests = "^2.28.0"
types-requests = "^2.28.0"
transformers = "^4.20.1"
pdoc3 = "^0.10.0"
lazydocs = "^0.4.0"
seaborn = "^0.12.0"
mistletoe = "^0.9.0"
ruff = "^0.0.191"
nbsphinx = "0.8.12"
sphinx-rtd-theme = "1.2.0"
myst_parser = "0.19.1"
sphinx_copybutton = "0.5.1"
flake8-bugbear = "23.2.13"
flake8 = "6.0.0"
sphinx = "6.1.3"
tensorflow = {version = "2.12.0", markers="sys_platform != 'darwin'"}
tensorflow-macos = {version = "2.12.0", markers="sys_platform == 'darwin'"}
tensorflow-metal = {version = "0.8.0", markers="sys_platform == 'darwin' and platform_machine == 'arm'"}
ipython = "^8.10.0"
markdown-it-py = "2.2.0"
torchvision = "0.14.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:`np\\.object` is a deprecated alias for the builtin `object`\\. To silence this warning, use `object` by itself\\. Doing this will not modify any behavior and is safe\\.:DeprecationWarning",
    "ignore:Using or importing the ABCs from 'collections' instead of from 'collections\\.abc' is deprecated.*:DeprecationWarning",
    "ignore: distutils Version classes are deprecated. Use packaging\\.version instead.*:DeprecationWarning",
    "ignore: forcing n_jobs = 1 on mac for segfault issue",
    "ignore: allowzero=0 by default.*:UserWarning",
    "ignore:Implicitly cleaning up:ResourceWarning",
    "ignore:non-integer arguments to randrange\\(\\) have been deprecated since Python 3\\.10 and will be removed in a subsequent version:DeprecationWarning",
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
]

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "docs/conf.py:release,src/concrete/ml/version.py:__version__"
upload_to_pypi = "False"
changelog_sections = "breaking, feature, fix, documentation, performance"

[tool.ruff]
line-length = 100

[tool.ruff.per-file-ignores]
# The tool looks to report 'imported but unused (F401)' while actually the function is used by
# package which import the __init__.py
"**/__init__.py" = ["F401"]
