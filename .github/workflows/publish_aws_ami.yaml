# Trigger AWS ImageBuidler pipeline to produce an AmazonMachineImage (AMI) containing concrete-ml
name: Publish AWS AMI
on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      version:
        description: Version to build the AMI
        required: true
        type: string

jobs:
  # This job will trigger a build for Python3.9 only. A matrix strategy needs to be set up
  # if a build is needed for other version of Python, or even other platforms (ARM, M1).
  launch-ami-build:
    name: Launch AMI build
    runs-on: ubuntu-latest
    steps:

      # Just a way to check that if triggered by workflow_dispatch the tag exists
      # FIXME: We still need to check that it matches a version tag
      # This won't work on automatically triggered based on release
      - name: Checkout Concrete ML Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          ref: ${{ inputs.version || github.ref_name}}
          fetch-depth: 1
          lfs: false
          path: "concrete-ml-version"

      # To use the files and all
      - name: Checkout Concrete ML Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          fetch-depth: 1
          lfs: false
          path: "concrete-ml-latest"

      - name: Checkout Slab Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          repository: "zama-ai/slab"
          path: "slab"
          token: ${{ secrets.BOT_TOKEN }}

      - name: Handle Git Ref
        id: git_ref
        run: |
          GIT_REF="${{ inputs.version }}"
          if [[ -z "${GIT_REF}" ]]
          then
            GIT_REF="${{ github.ref_name }}"
          fi
          echo "git-ref=${GIT_REF}" >> $GITHUB_OUTPUT

      - name: Trigger build pipeline via Slab
        run: |
          
          CML_VERSION="${{ steps.git_ref.outputs.git-ref }}"
          CML_VERSION="$(echo $CML_VERSION | cut -d 'v' -f 2)"
          
          # This basically takes the files and modifies some values from it
          COMPONENT_USER_DATA="$(cat concrete-ml-latest/ci/aws_ami_build_component.yaml | sed -e 's|\(concrete-ml==\)${CML_VERSION}|\1'${CML_VERSION}'|' -e  's|${AWS_ACCOUNT_ID}|${{ secrets.AWS_ACCOUNT_ID }}|')"

          COMPONENT_USER_DATA=$(echo "$COMPONENT_USER_DATA" | base64 | tr -d "\n")

          PAYLOAD='{"name": "zama-concrete-ml-py39-x86_64", "description": "Zama Concrete ML ${{ steps.git_ref.outputs.git-ref }} (with Python 3.9 for x86_64 architecture)", "release_tag": "${{ steps.git_ref.outputs.git-ref }}", "region": "eu-west-3", "image_pipeline_arn": "${{ secrets.AMI_PIPELINE_ARN }}", "distribution_configuration_arn": "${{ secrets.AMI_DISTRIB_CONFIG_ARN }}", "component_user_data": "'"${COMPONENT_USER_DATA}"'"}'

          echo -n "${PAYLOAD}" > payload.json

          SIGNATURE="$(bash slab/scripts/hmac_calculator.sh payload.json '${{ secrets.JOB_SECRET }}')"

          curl --fail-with-body -v -k \
          -H "Content-Type: application/json" \
          -H "X-Slab-Repository: ${{ github.repository }}" \
          -H "X-Slab-Command: build_aws_ami" \
          -H "X-Hub-Signature-256: sha256=${SIGNATURE}" \
          -d @payload.json \
          ${{ secrets.SLAB_URL }}

      - name: Slack Notification
        if: ${{ always() }}
        continue-on-error: true
        uses: rtCamp/action-slack-notify@4e5fb42d249be6a45a298f3c9543b111b02f7907
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_ICON: https://pbs.twimg.com/profile_images/1274014582265298945/OjBKP9kn_400x400.png
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "AWS AMI build pipeline triggered for concrete-ml ${{ steps.git_ref.outputs.git-ref }}"
          SLACK_USERNAME: ${{ secrets.BOT_USERNAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
