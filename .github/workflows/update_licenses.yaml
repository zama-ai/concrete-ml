# Workflow to update licenses for Ubuntu, macOS Silicon and macOS intel
name: Update licenses
on:
  workflow_dispatch:
    inputs:
      linux:
        description: "Update licenses for Ubuntu"
        type: boolean
        required: false
        default: true
      mac_silicon:
        description: "Update licenses for macOS (silicon)"
        type: boolean
        required: false
        default: true
      mac_intel:
        description: "Update licenses for macOS (intel)"
        type: boolean
        required: false
        default: true

concurrency:
  group: "${{ github.ref }}-${{ github.event_name }}-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  # Update licenses for all selected OS
  # The matrix strategy trick is inspired from https://github.com/orgs/community/discussions/26253
  # Basically, GitHub does not allow to have conditional statements when building matrices. One way
  # to do it is to add new boolean fields and exclude the os config(s) by combining them together.
  update_licenses:
    strategy:
      matrix:
        config:
          - os_name: linux
            os: ubuntu-latest
          - os_name: mac_silicon
            os: macos-latest-xlarge
          - os_name: mac_intel
            os: macos-latest-large 
        triggerLinux:
          - ${{ inputs.linux }}
        triggerMacSilicon:
          - ${{ inputs.mac_silicon }}
        triggerMacIntel:
          - ${{ inputs.mac_intel }}
        exclude:
          - triggerLinux: false
            config: {os_name: linux, os: ubuntu-latest}
          - triggerMacSilicon: false
            config: {os_name: mac_silicon, os: macos-latest-xlarge}
          - triggerMacIntel: false
            config: {os_name: mac_intel, os: macos-latest-large}

      fail-fast: false
    
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    env:
      PIP_INDEX_URL: ${{ secrets.PIP_INDEX_URL }}
      PIP_EXTRA_INDEX_URL: ${{ secrets.PIP_EXTRA_INDEX_URL }}

    steps:
      # Mask internal URLs if logged
      - name: Add masks
        id: masks
        run: |
          echo "::add-mask::${{ secrets.INTERNAL_PYPI_URL_FOR_MASK }}"
          echo "::add-mask::${{ secrets.INTERNAL_REPO_URL_FOR_MASK }}"

      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          token: ${{ secrets.BOT_TOKEN }}

      # Set up python 3.10 because Github does not seem to provide support for python 3.8 on arm64 
      # List of available versions and architectures : 
      # https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
      - name: Set up Python 3.10
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.7.1
          make setup_env

      - name: Update licenses
        run: |
          make licenses

      # Upload the updated license files as artifacts, if they exist
      # It is possible that no files have been generated if licenses have already been done for some
      # configuration(s)
      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          if-no-files-found: ignore
          name: licenses_${{ matrix.config.os_name }}
          path: |
            deps_licenses/licenses_${{ matrix.config.os_name }}_user.txt
            deps_licenses/licenses_${{ matrix.config.os_name }}_user.txt.md5

  # Push the updates license files, as a PR or directly to the branch
  push_licenses:
    runs-on: ubuntu-latest
    needs: [update_licenses]
    if: always()
    steps:
      # Mask internal URLs if logged
      - name: Add masks
        id: masks
        run: |
          echo "::add-mask::${{ secrets.INTERNAL_PYPI_URL_FOR_MASK }}"
          echo "::add-mask::${{ secrets.INTERNAL_REPO_URL_FOR_MASK }}"

      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          token: ${{ secrets.BOT_TOKEN }}

      # Retrieve all updated license files
      # Enable 'merge-multiple' to download all files in the 'deps_licenses' directory
      - name: Download artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          path: deps_licenses/
          merge-multiple: true

      # If the target branch is main or a release branch, a pull request is opened for everyone to 
      # review
      - name: Open PR
        if: ${{ github.ref_name == 'main' || startsWith(github.ref_name , 'release/') }} 
        uses: peter-evans/create-pull-request@c5a7806660adbe173f04e3e038b0ccdcd758773c
        with:
          token: ${{ secrets.BOT_TOKEN }}
          commit-message: "chore: update licenses"
          branch: "chore/update_licenses"
          base: "${{ github.ref_name }}"
          title: "Update licenses in ${{ github.ref_name }}"
          body: "Update licenses in ${{ github.ref_name }}"

      # If the target branch is another branch, the current branch is automatically merged into it
      - name: Push changes into the current branch
        if: ${{ github.ref_name != 'main' && !(startsWith(github.ref_name , 'release/')) }}
        uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842 #v5.0.1
        with:
          commit_message: "chore: update licenses"
          add_options: '-u'
