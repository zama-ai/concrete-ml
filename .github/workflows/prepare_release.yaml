name: Prepare release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release"
        required: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  prepare-release:
    name: Prepare release ${{ github.event.inputs.version }}
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    env:
      PROJECT_VERSION: ${{ github.event.inputs.version }}

    steps:
      # Mask internal URLs if logged
      - name: Add masks
        id: masks
        run: |
          echo "::add-mask::${{ secrets.INTERNAL_PYPI_URL_FOR_MASK }}"
          echo "::add-mask::${{ secrets.INTERNAL_REPO_URL_FOR_MASK }}"

      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          ref: "main"
          token: ${{ secrets.BOT_TOKEN }}

      # Make sure that the target branch is main
      - name: Stop if branch is not main
        id: check-branch-is-main
        if: ${{ always() && !cancelled() }}
        env:
          BRANCH_IS_MAIN: ${{ github.ref_name == 'main'}} 
        run: |
          if [[ "${BRANCH_IS_MAIN}" != "true" ]]; then
            echo "Release cannot be prepared: target branch is not main"
            exit 1
          fi

      - name: Set up Python 3.8
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.2.2
          make setup_env

      - name: Set version
        run: |
          make set_version

      - name: Build apidocs
        run: |
          make apidocs
      
      # Open a PR with the new version and updated apidocs
      - name: Open PR
        uses: peter-evans/create-pull-request@284f54f989303d2699d373481a0cfa13ad5a6666
        with:
          token: ${{ secrets.BOT_TOKEN }}
          commit-message: "chore: prepare release ${{ env.PROJECT_VERSION }}"
          branch: "chore/prepare_release_${{ env.PROJECT_VERSION }}"
          base: "${{ github.ref_name }}"
          title: "Prepare release ${{ env.PROJECT_VERSION }}"
          body: "Set version ${{ env.PROJECT_VERSION }} and build apidocs"

      - name: Slack Notification
        if: ${{ always() && !success() }}
        continue-on-error: true
        uses: rtCamp/action-slack-notify@b24d75fe0e728a4bf9fc42ee217caa686d141ee8
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_ICON: https://pbs.twimg.com/profile_images/1274014582265298945/OjBKP9kn_400x400.png
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Preparing release ${{ env.PROJECT_VERSION }} finished with status \ 
            ${{ job.status }} (${{ env.ACTION_RUN_URL }})"
          SLACK_USERNAME: ${{ secrets.BOT_USERNAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
